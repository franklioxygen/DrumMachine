{"version":3,"sources":["static/js/playAudios.js","components/Bar.jsx","components/Instrument.jsx","components/Track.jsx","components/Clock.jsx","static/js/keyboardListener.js","App.jsx","serviceWorker.js","index.js"],"names":["audio808_bd_long","Audio","audio808_bd_short","audio808_ch","audio808_clap","audio808_clav","audio808_cowbell","audio808_cym","audio808_ht","playAudio","instrument","vol","audio","newAud","cloneNode","loop","volume","preload","promise","play","undefined","catch","error","then","Bar","props","changeSel","bind","state","barId","selected","playNow","clearSwitch","doClear","this","setState","currBar","className","join","onClick","React","Component","Instrument","Track","groupNum","selectAll","Array","totalBars","map","e","i","key","Clock","beat","isOn","bpm","playTimer","pauseTimer","stopTimer","adjustBpm","setInterval","beatHandler","clearInterval","stopHandler","document","getElementById","value","playOrPause","id","stop","disabled","type","min","max","step","onChange","data-testid","keyboardListener","window","addEventListener","event","keyCode","preventDefault","click","App","createRef","adjustVol","clearAll","item","index","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62860795.chunk.js","sourcesContent":["const audio808_bd_long = new Audio(process.env.PUBLIC_URL + \"audios/808/808_bd_long.mp3\");\nconst audio808_bd_short = new Audio(process.env.PUBLIC_URL + \"audios/808/808_bd_short.mp3\");\nconst audio808_ch = new Audio(process.env.PUBLIC_URL + \"audios/808/808_ch.mp3\");\nconst audio808_clap = new Audio(process.env.PUBLIC_URL + \"audios/808/808_clap.mp3\");\nconst audio808_clav = new Audio(process.env.PUBLIC_URL + \"audios/808/808_clav.mp3\");\nconst audio808_cowbell = new Audio(process.env.PUBLIC_URL + \"audios/808/808_cowbell.mp3\");\nconst audio808_cym = new Audio(process.env.PUBLIC_URL + \"audios/808/808_cym.mp3\");\nconst audio808_ht = new Audio(process.env.PUBLIC_URL + \"audios/808/808_ht.mp3\");\n\n\nconst playAudio = (instrument, vol) => {\n    //    audio = audionew Audio(process.env.PUBLIC_URL + \"audios/\" + instrument + \".wav\");\n    let audio = audio808_bd_long;\n    switch (instrument) {\n        case \"808_bd_long\":\n            audio = audio808_bd_long;\n            break;\n        case \"808_bd_short\":\n            audio = audio808_bd_short;\n            break;\n        case \"808_ch\":\n            audio = audio808_ch;\n            break;\n        case \"808_clap\":\n            audio = audio808_clap;\n            break;\n        case \"808_clav\":\n            audio = audio808_clav;\n            break;\n        case \"808_cowbell\":\n            audio = audio808_cowbell;\n            break;\n        case \"808_cym\":\n            audio = audio808_cym;\n            break;\n        case \"808_ht\":\n            audio = audio808_ht;\n            break;\n        default:\n            audio = audio808_ht;\n            break;\n    }\n\n    let newAud = audio.cloneNode();\n    newAud.loop = false;\n    newAud.volume = vol / 100;\n    newAud.preload = \"auto\";\n    var promise = newAud.play();\n    // auto play policy https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n    if (promise !== undefined) {\n        promise.catch(error => {\n            // Auto-play was prevented\n            // Show a UI element to let the user manually start playback\n        }).then(() => {\n            // Auto-play started\n        });\n    }\n\n\n};\nexport default playAudio;","import React from \"react\";\nimport playAudio from \"../static/js/playAudios\";\nimport \"../App.css\";\n\nclass Bar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeSel = this.changeSel.bind(this);\n    this.state = {\n      barId: this.props.barId,\n      selected: false,\n      playNow: false,\n      clearSwitch: this.props.clearSwitch,\n      doClear: false\n    };\n  }\n  // switch selected state\n  changeSel() {\n    this.setState({ selected: !this.state.selected });\n  }\n\n  componentDidUpdate() {\n    //play audio if bar is selected and on beat\n    if (\n      this.props.barId === this.props.currBar &&\n      this.state.selected === true\n    ) {\n      playAudio(this.props.instrument, this.props.vol);\n    }\n    // clear all bar's select state\n    if (this.props.clearSwitch !== this.state.clearSwitch) {\n      this.setState({\n        clearSwitch: this.props.clearSwitch,\n        selected: false\n      });\n    }\n  }\n\n  render() {\n    let playNow = this.state.barId === this.props.currBar;\n    return (\n      <span\n        className={[\"bar\" + this.state.selected + playNow, \"bar\"].join(\" \")}\n        onClick={this.changeSel}\n      ></span>\n    );\n  }\n}\nexport default Bar;\n","import React from \"react\";\nimport \"../App.css\";\n\nclass Instrument extends React.Component {\n  render() {\n    return (\n      <span className={[\"instrument\", \"bar\"].join(\" \")}>\n        {this.props.instrument}\n      </span>\n    );\n  }\n}\nexport default Instrument;\n","import React from \"react\";\nimport Bar from \"./Bar\";\nimport \"../App.css\";\nimport Instrument from \"./Instrument\";\nclass Track extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      groupNum: 4\n    };\n  }\n\n  render() {\n    return (\n      <div className={\"track\"}>\n        {/* front instrument indicator */}\n        <Instrument\n          instrument={this.props.instrument}\n          onClick={this.selectAll}\n        ></Instrument>\n        {/* render following bars */}\n        {[...Array(this.props.totalBars)].map((e, i) => (\n          <span key={i}>\n            <Bar\n              barId={i}\n              instrument={this.props.instrument}\n              currBar={this.props.currBar}\n              vol={this.props.vol}\n              clearSwitch={this.props.clearSwitch}\n            ></Bar>\n            {/* group seprator */}\n            {(i + 1) % this.state.groupNum === 0 &&\n            i + 1 !== this.props.totalBars\n              ? \".\"\n              : null}\n          </span>\n        ))}\n      </div>\n    );\n  }\n}\nexport default Track;\n","import React from \"react\";\nimport \"../App.css\";\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      beat: 0,\n      isOn: false,\n      bpm: 120\n    };\n    this.playTimer = this.playTimer.bind(this);\n    this.pauseTimer = this.pauseTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.adjustBpm = this.adjustBpm.bind(this);\n  }\n\n  // start beat with designed bpm\n  playTimer() {\n    this.setState({\n      isOn: true,\n      beat: this.state.beat\n    });\n    this.beat = setInterval(() => {\n      this.setState({\n        beat:\n          this.state.beat === this.props.totalBars - 1 ? 0 : this.state.beat + 1\n      });\n      this.props.beatHandler(this.state.beat);\n    }, (1000 * 60) / this.state.bpm);\n  }\n  // pause beat\n  pauseTimer() {\n    this.setState({ isOn: false });\n    clearInterval(this.beat);\n  }\n  // stop beat\n  stopTimer() {\n    this.setState({ beat: 0, isOn: false });\n    clearInterval(this.beat);\n    this.props.stopHandler();\n  }\n  // adjust beat,\n\n  adjustBpm() {\n    this.setState({\n      bpm: document.getElementById(\"bpmRange\").value\n    });\n    clearInterval(this.beat);\n    this.beat = setInterval(() => {\n      this.setState({\n        beat:\n          this.state.beat === this.props.totalBars - 1 ? 0 : this.state.beat + 1\n      });\n      this.props.beatHandler(this.state.beat);\n    }, (1000 * 60) / (this.state.bpm * 4));\n  }\n\n  render() {\n    let playOrPause =\n      this.state.beat === 0 || !this.state.isOn ? (\n        <button\n          className={\"button\"}\n          id=\"playOrPauseBtn\"\n          onClick={this.playTimer}\n        >\n          &#9658;\n        </button>\n      ) : (\n        <button\n          className={\"button\"}\n          id=\"playOrPauseBtn\"\n          onClick={this.pauseTimer}\n        >\n          &#10074;&#10074;\n        </button>\n      );\n\n    let stop = (\n      <button\n        className={\"button\"}\n        id=\"stopBtn\"\n        onClick={this.stopTimer}\n        disabled={!this.state.isOn && this.state.beat === 0}\n      >\n        &#9724;\n      </button>\n    );\n\n    return (\n      <span>\n        <input\n          id=\"bpmRange\"\n          type=\"range\"\n          min=\"30\"\n          max=\"180\"\n          step=\"5\"\n          className=\"slider\"\n          value={this.state.bpm}\n          onChange={this.adjustBpm}\n        ></input>\n        <label data-testid=\"bpmLabel\" className=\"label\">\n          BPM:{this.state.bpm}\n        </label>\n        <span className=\"btn-group\">\n          {playOrPause}\n          {stop}\n        </span>\n      </span>\n    );\n  }\n}\n\nexport default Clock;\n","const keyboardListener = () => {\n    window.addEventListener(\"keyup\", function (event) {\n        if (event.keyCode === 32) { //space\n            event.preventDefault();\n            document.getElementById(\"playOrPauseBtn\").click();\n        }\n        if (event.keyCode === 27) { // escape\n            event.preventDefault();\n            document.getElementById(\"stopBtn\").click();\n        }\n        if (event.keyCode === 82) { // r\n            event.preventDefault();\n            document.getElementById(\"clearBtn\").click();\n        }\n    });\n};\nexport default keyboardListener;","import React from \"react\";\nimport Track from \"./components/Track\";\nimport Clock from \"./components/Clock\";\nimport keyboardListener from \"./static/js/keyboardListener\";\nimport \"./App.css\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.Track = React.createRef();\n    this.state = {\n      totalBars: 16,\n      currBar: null,\n      volume: 50,\n      clearSwitch: false,\n      instrument: [\n        \"808_bd_long\",\n        \"808_bd_short\",\n        \"808_ch\",\n        \"808_clap\",\n        \"808_clav\",\n        \"808_cowbell\",\n        \"808_cym\",\n        \"808_ht\"\n      ]\n    };\n    this.beatHandler = this.beatHandler.bind(this);\n    this.stopHandler = this.stopHandler.bind(this);\n    this.adjustVol = this.adjustVol.bind(this);\n  }\n  // syncronize clock beat to bar\n  beatHandler(beat) {\n    this.setState({\n      currBar: beat\n    });\n  }\n  // click stop button\n  stopHandler() {\n    this.setState({ currBar: null });\n  }\n  // adjust volume\n  adjustVol() {\n    this.setState({\n      volume: document.getElementById(\"volRange\").value\n    });\n  }\n  // clear all selected bars\n  clearAll() {\n    this.setState({ clearSwitch: !this.state.clearSwitch });\n  }\n\n  componentDidMount() {\n    keyboardListener();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <h1>A Drum Beat Sequencer</h1>\n          <input\n            id=\"volRange\"\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            step=\"5\"\n            className=\"slider\"\n            value={this.state.volume}\n            onChange={this.adjustVol}\n          ></input>\n          <label data-testid=\"volLabel\" className=\"label\">\n            VOL:{this.state.volume}%\n          </label>\n          <Clock\n            beatHandler={this.beatHandler}\n            stopHandler={this.stopHandler}\n            totalBars={this.state.totalBars}\n          ></Clock>\n          <span className={\"btn-group\"}>\n            <button\n              className={\"button\"}\n              id=\"clearBtn\"\n              onClick={() => this.clearAll()}\n            >\n              &#8634;\n            </button>\n          </span>\n          {this.state.instrument.map((item, index) => {\n            return (\n              <Track\n                key={index}\n                instrument={item}\n                currBar={this.state.currBar}\n                totalBars={this.state.totalBars}\n                vol={this.state.volume}\n                clearSwitch={this.state.clearSwitch}\n              ></Track>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}